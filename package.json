{
  "name": "cursor-memo-plugin",
  "displayName": "Cursor Memo Plugin",
  "description": "Plugin to save and reuse Cursor chat commands",
  "version": "0.2.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/BoLiDev/cursor-memo-command.git"
  },
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cursor-memo.saveCommand",
        "title": "Save Current Command",
        "category": "Cursor Memo",
        "icon": "$(add)"
      },
      {
        "command": "cursor-memo.removeCommand",
        "title": "Delete",
        "category": "Cursor Memo"
      },
      {
        "command": "cursor-memo.pasteToEditor",
        "title": "Paste to Cursor Chatbox",
        "category": "Cursor Memo"
      },
      {
        "command": "cursor-memo.renameCommand",
        "title": "Rename",
        "category": "Cursor Memo"
      },
      {
        "command": "cursor-memo.editCommand",
        "title": "Edit",
        "category": "Cursor Memo"
      },
      {
        "command": "cursor-memo.addCategory",
        "title": "Add Category",
        "category": "Cursor Memo",
        "icon": "$(book)"
      },
      {
        "command": "cursor-memo.renameCategory",
        "title": "Rename",
        "category": "Cursor Memo"
      },
      {
        "command": "cursor-memo.moveToCategory",
        "title": "Move to Category",
        "category": "Cursor Memo"
      },
      {
        "command": "cursor-memo.deleteCategory",
        "title": "Delete",
        "category": "Cursor Memo"
      },
      {
        "command": "cursor-memo.removeCloudCategory",
        "title": "Remove from Local",
        "category": "Cursor Memo"
      },
      {
        "command": "cursor-memo.addCommandToCategory",
        "title": "Add Command to this Category",
        "category": "Cursor Memo",
        "icon": "$(add)"
      },
      {
        "command": "cursor-memo.exportCommands",
        "title": "Export Commands",
        "category": "Cursor Memo",
        "icon": "$(arrow-down)"
      },
      {
        "command": "cursor-memo.importCommands",
        "title": "Import Commands",
        "category": "Cursor Memo",
        "icon": "$(arrow-up)"
      },
      {
        "command": "cursor-memo.syncFromGitLab",
        "title": "Sync from GitLab",
        "category": "Cursor Memo",
        "icon": "$(sync)"
      },
      {
        "command": "cursor-memo.manageGitLabToken",
        "title": "Manage GitLab Token",
        "category": "Cursor Memo",
        "icon": "$(key)"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "cursorMemoPanel",
          "name": "Command Memo"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "cursor-memo.saveCommand",
          "when": "view == cursorMemoPanel && viewItem == localGroup",
          "group": "inline@1"
        },
        {
          "command": "cursor-memo.addCategory",
          "when": "view == cursorMemoPanel && viewItem == localGroup",
          "group": "inline@2"
        },
        {
          "command": "cursor-memo.importCommands",
          "when": "view == cursorMemoPanel && viewItem == localGroup",
          "group": "inline@3"
        },
        {
          "command": "cursor-memo.exportCommands",
          "when": "view == cursorMemoPanel && viewItem == localGroup",
          "group": "inline@4"
        },
        {
          "command": "cursor-memo.syncFromGitLab",
          "when": "view == cursorMemoPanel && viewItem == cloudGroup",
          "group": "inline@1"
        },
        {
          "command": "cursor-memo.manageGitLabToken",
          "when": "view == cursorMemoPanel && viewItem == cloudGroup",
          "group": "inline@2"
        },
        {
          "command": "cursor-memo.renameCommand",
          "when": "view == cursorMemoPanel && viewItem == memoItem",
          "group": "1_modification@1"
        },
        {
          "command": "cursor-memo.editCommand",
          "when": "view == cursorMemoPanel && viewItem == memoItem",
          "group": "1_modification@2"
        },
        {
          "command": "cursor-memo.removeCommand",
          "when": "view == cursorMemoPanel && viewItem == memoItem",
          "group": "1_modification@3"
        },
        {
          "command": "cursor-memo.moveToCategory",
          "when": "view == cursorMemoPanel && viewItem == memoItem",
          "group": "2_organize"
        },
        {
          "command": "cursor-memo.renameCategory",
          "when": "view == cursorMemoPanel && viewItem == category",
          "group": "1_modification@1"
        },
        {
          "command": "cursor-memo.deleteCategory",
          "when": "view == cursorMemoPanel && viewItem == category",
          "group": "1_modification@2"
        },
        {
          "command": "cursor-memo.removeCloudCategory",
          "when": "view == cursorMemoPanel && viewItem == cloudCategory",
          "group": "1_modification@1"
        },
        {
          "command": "cursor-memo.addCommandToCategory",
          "when": "view == cursorMemoPanel && viewItem == category",
          "group": "inline"
        }
      ],
      "view/title": []
    },
    "configuration": {
      "title": "Cursor Memo",
      "properties": {
        "cursorMemo.gitlabDomain": {
          "type": "string",
          "default": "https://gitlab.okg.com",
          "description": "GitLab domain URL"
        },
        "cursorMemo.gitlabProjectId": {
          "type": "string",
          "default": "9993",
          "description": "GitLab project ID for team commands"
        },
        "cursorMemo.gitlabFilePath": {
          "type": "string",
          "default": "prompt.json",
          "description": "Path to the team commands file in the GitLab repository"
        },
        "cursorMemo.gitlabBranch": {
          "type": "string",
          "default": "master",
          "description": "GitLab branch name containing the team commands file"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "npx vsce package"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^4.28.2",
    "@typescript-eslint/parser": "^4.28.2",
    "eslint": "^7.30.0",
    "glob": "^7.1.7",
    "mocha": "^9.0.2",
    "typescript": "^4.3.5",
    "vsce": "^1.100.1"
  },
  "dependencies": {
    "@types/node-fetch": "^2.6.2",
    "node-fetch": "^2.6.7",
    "zod": "^3.22.4"
  }
}
